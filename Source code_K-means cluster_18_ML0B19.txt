import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans

path = r"E:\aquacrop\GUI_AC71\Jashore 2022-04-01 to 2024-10-01.csv"
df = pd.read_csv(path)

X = df.iloc[:, [2, 5]].values

# Determining the optimal number of clusters using the elbow method
inertia = []
for k in range(1, 11):
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(X)
    inertia.append(kmeans.inertia_)

# Plotting the elbow curve
plt.figure(figsize=(8, 5))
plt.plot(range(1, 11), inertia, marker='o', linestyle='--')
plt.title('Elbow Method for Optimal Clusters')
plt.xlabel('Number of Clusters')
plt.ylabel('Inertia')
plt.grid(True)
plt.show()

from sklearn.impute import SimpleImputer

imp = SimpleImputer(missing_values=np.nan, strategy="mean")
imp = imp.fit(X[:, :])
X[:, :] = imp.fit_transform(X[:, :])
from sklearn.preprocessing import LabelEncoder

lb = LabelEncoder()
X[:, 0] = lb.fit_transform(X[:, 0])
print(X)
# Applying K-Means
kmeans = KMeans(n_clusters=4, init='k-means++', max_iter=300,
                n_init=10, random_state=0)
y_kmeans = kmeans.fit_predict(X)
plt.scatter(X[y_kmeans == 0, 0], X[y_kmeans == 0, 1], s=100, c='red',
            label='Çluster_1')
plt.scatter(X[y_kmeans == 1, 0], X[y_kmeans == 1, 1], s=100, c='green',
            label='Çluster_2')
plt.scatter(X[y_kmeans == 2, 0], X[y_kmeans == 2, 1], s=100, c='black',
            label='Çluster_3')
plt.scatter(X[y_kmeans == 3, 0], X[y_kmeans == 3, 1], s=100, c='cyan',
            label='Çluster_4')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1],
            s=300, c='Yellow', label='Centroids')
plt.title('The final clustered data')
plt.xlabel('The X-axis data')
plt.ylabel('The Y-axis data')
plt.legend()
plt.show()